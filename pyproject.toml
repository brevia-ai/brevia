[tool.poetry]
name = "Brevia"
version = "0.14.0"
description = "Extensible API and framework to build your Retrieval Augmented Generation (RAG) and Information Extraction (IE) applications with LLMs"
authors = [
  "Niki Corradetti <niki.corradetti@atlasconsulting.it>",
  "Stefano Rosanelli <stefano.rosanelli@atlasconsulting.it>"
]
readme = "README.md"
homepage = "https://github.com/brevia-ai/brevia"
repository = "https://github.com/brevia-ai/brevia"

  [tool.poetry.dependencies]
  python = ">=3.10,<3.14"
  bs4 = "^0.0.1"
  langchain = "^0.3.20"
  fastapi = "^0.115.12"
  nltk = "^3.9.1"
  python-dotenv = "^1.0.0"
  alembic = "^1.11.1"
  python-jose = "^3.3.0"
  sqlalchemy-utils = "^0.41.1"
  pydantic-settings = "^2.1.0"
  tomli = "^2.0.1"
  langchain-community = "^0.3.19"
  langchain-openai = "^0.3.7"
  jinja2 = "^3.1.4"
  langchain-cohere = "^0.4.2"
  langchain-ollama = "^0.2.3"
  langchain-anthropic = "^0.3.9"
  langchain-deepseek = "^0.1.2"
  python-multipart = "^0.0.20"
  psycopg2-binary = "^2.9.10"
  pgvector = "^0.4.0"
  pypdf = "^5.4.0"
  lxml = "^5.3.1"
  glom = "^24.11.0"

    [tool.poetry.dependencies.uvicorn]
    version = "^0.34.2"
    extras = [ "standard" ]

  [tool.poetry.scripts]
  create_token = "brevia.commands:create_access_token"
  create_openapi = "brevia.commands:create_openapi"
  db_current = "brevia.commands:db_current_cmd"
  db_upgrade = "brevia.commands:db_upgrade_cmd"
  db_downgrade = "brevia.commands:db_downgrade_cmd"
  db_revision = "brevia.commands:db_revision_cmd"
  export_collection = "brevia.commands:export_collection"
  import_collection = "brevia.commands:import_collection"
  import_file = "brevia.commands:import_file"
  test_service = "brevia.commands:run_test_service"
  update_collection_links = "brevia.commands:update_collection_links"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
pylint = "^3.0.1"
pytest = "^8.2.0"
pytest-cov = "^4.1.0"
httpx = "^0.27.2"
pytest-asyncio = "^0.24.0"

[tool.pylint.main]
fail-under = 9.5
ignore = [ ".git", "venv", ".venv", "data" ]
limit-inference-results = 100
persistent = true
py-version = "3.10"
extension-pkg-whitelist = [ "pydantic" ]

[build-system]
requires = [ "poetry-core" ]
build-backend = "poetry.core.masonry.api"
